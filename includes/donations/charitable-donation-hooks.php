<?php 
/**
 * Charitable Donation Hooks. 
 *
 * Action/filter hooks used for Charitable donations. 
 * 
 * @package     Charitable/Functions/Donations
 * @version     1.0.0
 * @author      Eric Daams
 * @copyright   Copyright (c) 2015, Studio 164a
 * @license     http://opensource.org/licenses/gpl-2.0.php GNU Public License  
 */

if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly

/**
 * Start a donation. 
 *
 * In default Charitable, this happens when the donation form is loaded. The
 * donation is not saved to the database yet; it just exists in the user's 
 * session.
 *
 * @see Charitable_Donation_Processor::add_donation_to_session()
 */
add_action( 'charitable_start_donation', array( 'Charitable_Donation_Processor', 'add_donation_to_session' ) );

/**
 * Make a donation. 
 *
 * This is when a donation is saved to the database. 
 *
 * @see Charitable_Donation_Processor::make_donation()
 */
add_action( 'charitable_make_donation', array( 'Charitable_Donation_Processor', 'process_donation_form_submission' ) );

/**
 * AJAX hook to make a donation.
 *
 * @see Charitable_Donation_Processor::ajax_make_donation()
 */
add_action( 'wp_ajax_add_donation', array( 'Charitable_Donation_Processor', 'ajax_make_donation' ) );
add_action( 'wp_ajax_nopriv_add_donation', array( 'Charitable_Donation_Processor', 'ajax_make_donation' ) );

/**
 * Make a streamlined donation. 
 * 
 * This hook is fired when a form generated by Charitable_Donation_Amount_Form 
 * is submitted. By default, it just includes the amount to be donated and 
 * the campaign. 
 * 
 * @see Charitable_Donation_Processor::make_donation_streamlined()
 */
add_action( 'charitable_make_donation_streamlined', array( 'Charitable_Donation_Processor', 'make_donation_streamlined' ) );

/**
 * Donation status change.
 * 
 * @see Charitable_Donation::flush_campaigns_donation_cache
 */
add_action( 'charitable_after_update_donation', array( 'Charitable_Donation', 'flush_campaigns_donation_cache' ) );

foreach ( Charitable_Donation::get_valid_donation_statuses() as $status => $label ) {
    add_action( $status . '_donation', array( 'Charitable_Donation', 'flush_campaigns_donation_cache' ) );
}

/**
 * IPN listener. 
 *
 * @see Charitable_Donation_Processor::ipn_listener()
 */
add_action( 'init', array( 'Charitable_Donation_Processor', 'ipn_listener' ) );

/**
 * Handle PayPal gateway payments. 
 *
 * @see Charitable_Gateway_Paypal::validate_donation
 * @see Charitable_Gateway_Paypal::process_donation
 * @see Charitable_Gateway_Paypal::process_ipn
 * @see Charitable_Gateway_Paypal::process_web_accept
 */
add_filter( 'charitable_validate_donation_form_submission_gateway', array( 'Charitable_Gateway_Paypal', 'validate_donation' ), 10, 3 );
add_action( 'charitable_process_donation_paypal', array( 'Charitable_Gateway_Paypal', 'process_donation' ), 10, 2 );
add_action( 'charitable_process_ipn_paypal', array( 'Charitable_Gateway_Paypal', 'process_ipn' ) );
add_action( 'charitable_paypal_web_accept', array( 'Charitable_Gateway_Paypal', 'process_web_accept' ), 10, 2 );
